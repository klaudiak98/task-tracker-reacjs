{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","coursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","to","About","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"6QAEMA,EAAS,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,QAE3B,OACI,wBACIA,QAAWA,EACXC,MAAS,CAACC,gBAAiBJ,GAC3BK,UAAY,MAHhB,SAKKJ,KAKbF,EAAOO,aAAe,CAClBN,MAAO,aASID,QCrBTQ,EAAS,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,QAErBC,EAAWC,cAEjB,OACI,yBAAQP,UAAY,SAApB,UACI,6BAAKG,IACkB,MAAtBG,EAASE,UAAoB,cAAC,EAAD,CAC1Bb,MAAOU,EAAU,MAAQ,QACzBT,KAAMS,EAAU,QAAU,MAC1BR,QAAWO,QAM3BF,EAAOD,aAAe,CAClBE,MAAO,gBAOID,Q,QCPAO,EAnBF,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SAC3B,OACI,sBACIZ,UAAS,eAAUU,EAAKG,SAAW,WAAa,IAChDC,cAAe,kBAAMF,EAASF,EAAKK,KAFvC,UAII,+BACKL,EAAKd,KACN,cAAC,IAAD,CACIE,MAAO,CAACH,MAAM,MAAOqB,QAAQ,WAC7BnB,QAAS,kBAAMc,EAASD,EAAKK,UAGrC,4BAAIL,EAAKO,UCDNC,EAZD,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOR,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAE9B,OACI,mCACKO,EAAMC,KAAI,SAACV,GAAD,OAEP,cAAC,EAAD,CAAqBA,KAAMA,EAAMC,SAAUA,EAAUC,SAAUA,GAAnDF,EAAKK,UCmDlBM,EAzDC,SAAC,GAAe,IAAbjB,EAAY,EAAZA,MAEf,EAAwBkB,mBAAS,IAAjC,mBAAO1B,EAAP,KAAa2B,EAAb,KACA,EAAsBD,mBAAS,IAA/B,mBAAOL,EAAP,KAAYO,EAAZ,KACA,EAAgCF,oBAAS,GAAzC,mBAAOT,EAAP,KAAiBY,EAAjB,KAkBA,OACI,uBAAMzB,UAAU,WAAW0B,SAjBd,SAACC,GACdA,EAAEC,iBAEGhC,GAKLQ,EAAM,CAACR,OAAMqB,MAAKJ,aAElBU,EAAQ,IACRC,EAAO,IACPC,GAAY,IARRI,MAAM,sBAaV,UACI,sBAAK7B,UAAU,eAAf,UACI,yCACA,uBACI8B,KAAK,OACLC,YAAY,WACZC,MAAOpC,EACPqC,SAAU,SAACN,GAAD,OAAOJ,EAAQI,EAAEO,OAAOF,aAG1C,sBAAKhC,UAAU,eAAf,UACI,gDACA,uBACI8B,KAAK,OACLC,YAAY,aACZC,MAAOf,EACPgB,SAAU,SAACN,GAAD,OAAOH,EAAOG,EAAEO,OAAOF,aAGzC,sBAAKhC,UAAU,kCAAf,UACI,iDACA,uBACI8B,KAAK,WACLK,QAAStB,EACTmB,MAAOnB,EACPoB,SAAU,SAACN,GAAD,OAAOF,EAAYE,EAAES,cAAcD,eAIrD,uBAAOL,KAAK,SAASE,MAAM,YAAYhC,UAAU,sBC3C9CqC,EATA,WACX,OACI,mCACI,oDACA,cAAC,IAAD,CAAMC,GAAG,SAAT,uBCKGC,EATD,WACV,OACI,gCACI,+CACA,cAAC,IAAD,CAAMD,GAAG,IAAT,yBC0HGE,MAxHf,WAEE,MAAsClB,oBAAS,GAA/C,mBAAOmB,EAAP,KAAoBC,EAApB,KACA,EAA0BpB,mBAAS,IAAnC,mBAAOH,EAAP,KAAcwB,EAAd,KAEAC,qBAAU,YACM,uCAAG,4BAAAC,EAAA,sEACeC,IADf,OACTC,EADS,OAEfJ,EAASI,GAFM,2CAAH,qDAKdC,KACC,IAGH,IAAMF,EAAU,uCAAG,8BAAAD,EAAA,sEACCI,MAAM,+BADP,cACXC,EADW,gBAEEA,EAAIC,OAFN,cAEXC,EAFW,yBAIVA,GAJU,2CAAH,qDAQRC,EAAS,uCAAG,WAAOtC,GAAP,iBAAA8B,EAAA,sEACEI,MAAM,+BAAD,OAAgClC,IADvC,cACVmC,EADU,gBAEGA,EAAIC,OAFP,cAEVC,EAFU,yBAITA,GAJS,2CAAH,sDAQXE,EAAO,uCAAG,WAAO5C,GAAP,iBAAAmC,EAAA,sEACII,MAChB,8BACA,CACEM,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUjD,KARX,cACRwC,EADQ,gBAWKA,EAAIC,OAXT,OAWRC,EAXQ,OAadT,EAAS,GAAD,mBAAKxB,GAAL,CAAYiC,KAbN,2CAAH,sDAqBPQ,EAAU,uCAAG,WAAO7C,GAAP,SAAA8B,EAAA,sEACXI,MAAM,+BAAD,OACsBlC,GAC/B,CACEwC,OAAQ,WAJK,OAOjBZ,EAASxB,EAAM0C,QAAO,SAACnD,GAAD,OAAWA,EAAKK,KAAOA,MAP5B,2CAAH,sDAWV+C,EAAc,uCAAG,WAAO/C,GAAP,qBAAA8B,EAAA,sEACMQ,EAAUtC,GADhB,cACfgD,EADe,OAEfC,EAFe,2BAEAD,GAFA,IAEclD,UAAWkD,EAAalD,WAFtC,SAIHoC,MAAM,+BAAD,OACUlC,GAC/B,CACEwC,OAAQ,MACRC,QAAS,CACP,eAAe,oBAEjBC,KAAKC,KAAKC,UAAUK,KAXH,cAIfd,EAJe,gBAcFA,EAAIC,OAdF,OAcfC,EAde,OAgBrBT,EAASxB,EAAMC,KACb,SAACV,GAAD,OAAUA,EAAKK,KAAOA,EAAZ,2BACHL,GADG,IACIG,SAAUuC,EAAKvC,WACzBH,MAnBe,4CAAH,sDAuBpB,OACE,cAAC,IAAD,UACE,sBAAKV,UAAU,YAAf,UACE,cAAC,EAAD,CACEI,MAAO,WAAOsC,GAAgBD,IAC9BpC,QAASoC,IAEX,cAAC,IAAD,CACEwB,KAAK,IACLC,OAAK,EACLC,OAAQ,SAACC,GAAD,OACN,qCACI3B,GAAe,cAAC,EAAD,CAASrC,MAAOkD,IAC/BnC,EAAMkD,OAAS,EACf,cAAC,EAAD,CACElD,MAAOA,EACPR,SAAUiD,EACVhD,SAAUkD,IAEZ,yBAIR,cAAC,IAAD,CACEG,KAAK,SACLK,UAAW/B,IAEb,cAAC,EAAD,UC7GOgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASb,OACP,cAAC,IAAMc,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e6e85e0e.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Button = ({ color, text, onClick}) => {\n\n    return (\n        <button \n            onClick = {onClick}\n            style = {{backgroundColor: color}} \n            className = 'btn' \n        >\n            {text}\n        </button>\n        )\n}\n\nButton.defaultProps = {\n    color: 'steelblue'\n}\n\nButton.propTypes = {\n    color: PropTypes.string,\n    text: PropTypes.string,\n    onClick: PropTypes.func\n}\n\nexport default Button\n","import PropTypes from 'prop-types'\nimport { useLocation } from 'react-router'\nimport Button from './Button.js'\n\nconst Header = ({title, onAdd, showAdd}) => {\n\n    const location = useLocation()\n\n    return (\n        <header className = 'header'>\n            <h1>{title}</h1>\n            {location.pathname === '/' && <Button \n                color={showAdd ? 'red' : 'green'} \n                text={showAdd ? 'Close' : 'Add'} \n                onClick = {onAdd}\n            />}\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: 'Task Tracker',\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired\n}\n\nexport default Header\n","import {FaTimes} from 'react-icons/fa'\n\nconst Task = ({task, onDelete, onToggle}) => {\n    return (\n        <div \n            className={`task ${task.reminder ? 'reminder' : ''}`} \n            onDoubleClick={() => onToggle(task.id)}\n        >\n            <h3>\n                {task.text} \n                <FaTimes \n                    style={{color:'red', coursor:'pointer'}} \n                    onClick={() => onDelete(task.id)}\n                /> \n            </h3>\n            <p>{task.day}</p>\n        </div>\n        \n    )\n}\n\nexport default Task\n","import Task from \"./Task\"\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n\n    return (\n        <>\n            {tasks.map((task) => \n            (\n                <Task key ={task.id} task={task} onDelete={onDelete} onToggle={onToggle}/>\n            ))}\n        </>\n    )\n}\n\nexport default Tasks\n","import { useState } from \"react\"\n\nconst AddTask = ({ onAdd }) => {\n\n    const [text, setText] = useState('')\n    const [day, setDay] = useState('')\n    const [reminder, setReminder] = useState(false)\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if (!text) {\n            alert('Please add a task')\n            return\n        }\n\n        onAdd({text, day, reminder})\n\n        setText('')\n        setDay('')\n        setReminder(false)\n\n    }\n\n    return (\n        <form className='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label>Task</label>\n                <input \n                    type='text' \n                    placeholder='Add Task' \n                    value={text} \n                    onChange={(e) => setText(e.target.value)}\n                />\n            </div>\n            <div className='form-control'>\n                <label>Day & Time </label>\n                <input \n                    type='text' \n                    placeholder='Day & Time'\n                    value={day} \n                    onChange={(e) => setDay(e.target.value)}\n                />\n            </div>\n            <div className='form-control form-control-check'>\n                <label>Set reminder</label>\n                <input \n                    type='checkbox'\n                    checked={reminder}\n                    value={reminder} \n                    onChange={(e) => setReminder(e.currentTarget.checked)}\n                />\n            </div>\n            \n            <input type='submit' value='Save Task' className='btn btn-block' />\n        </form>\n    )\n}\n\nexport default AddTask\n","import { Link } from \"react-router-dom\"\n\nconst Footer = () => {\n    return (\n        <footer>\n            <p>Copyright &copy; 2021</p>\n            <Link to='/about'>About</Link>\n        </footer>\n    )\n}\n\nexport default Footer\n","import { Link } from \"react-router-dom\"\n\nconst About = () => {\n    return (\n        <div>\n            <h4>Version 1.0.0</h4>\n            <Link to='/'>Go Back</Link>\n        </div>\n    )\n}\n\nexport default About\n","import { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route} from 'react-router-dom'\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from './components/AddTask';\nimport Footer from './components/Footer';\nimport About from './components/About';\n\nfunction App() {\n\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  }, [])\n\n  // Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n    \n    return data\n  }\n\n    // Fetch Task\n    const fetchTask = async (id) => {\n      const res = await fetch(`http://localhost:5000/tasks/${id}`)\n      const data = await res.json()\n      \n      return data\n    }\n\n  // Add task\n  const addTask = async (task) => {\n    const res = await fetch(\n      'http://localhost:5000/tasks', \n      {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(task)\n      })\n    \n    const data = await res.json()\n\n    setTasks([...tasks, data])\n\n    /*const id = Math.floor(Math.random() * 10000) + 1\n    const newTask = {id, ...task, }\n    setTasks([...tasks, newTask])*/\n  }\n\n  // Delete task\n  const deleteTask = async (id) => {\n    await fetch(\n      `http://localhost:5000/tasks/${id}`,\n      {\n        method: 'DELETE'\n      })\n\n    setTasks(tasks.filter((task) =>  task.id !== id))\n  }\n\n  // Toggle Reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id)\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n\n    const res = await fetch(\n      `http://localhost:5000/tasks/${id}`,\n      {\n        method: 'PUT',\n        headers: {\n          'Content-type':'application/json'\n        },\n        body:JSON.stringify(updTask)\n      }\n      )\n    const data = await res.json()\n\n    setTasks(tasks.map(\n      (task) => task.id === id ? \n        { ...task , reminder: data.reminder} \n        : task\n      ))\n  }\n\n  return (\n    <Router>\n      <div className='container'>\n        <Header \n          onAdd={() => {setShowAddTask(!showAddTask)}} \n          showAdd={showAddTask}\n        />\n        <Route \n          path='/' \n          exact \n          render={(props) => (\n            <>\n              { showAddTask && <AddTask onAdd={addTask} />}\n              { tasks.length > 0 ? \n                <Tasks \n                  tasks={tasks} \n                  onDelete={deleteTask}\n                  onToggle={toggleReminder}\n                /> : \n                'No Tasks To Show'}\n            </>\n          )}\n        />\n        <Route \n          path='/about' \n          component={About}\n        />\n        <Footer/>\n      </div>\n    </Router>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}